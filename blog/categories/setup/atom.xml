<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Setup | Code, informally]]></title>
  <link href="http://paulomouat.github.com/blog/blog/categories/setup/atom.xml" rel="self"/>
  <link href="http://paulomouat.github.com/blog/"/>
  <updated>2012-08-21T17:10:22-04:00</updated>
  <id>http://paulomouat.github.com/blog/</id>
  <author>
    <name><![CDATA[Paulo Mouat]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up Go and Sublime Text 2 packages for editing Go code]]></title>
    <link href="http://paulomouat.github.com/blog/blog/2012/08/21/setting-up-go-and-sublime-text-2-packages/"/>
    <updated>2012-08-21T21:36:00-04:00</updated>
    <id>http://paulomouat.github.com/blog/blog/2012/08/21/setting-up-go-and-sublime-text-2-packages</id>
    <content type="html"><![CDATA[<p>Instructions to download and install the Go tools are available at <a href="http://golang.org/doc/install">http://golang.org/doc/install</a>, but in essence you need to do the following:</p>

<ol>
<li>Download the binaries from <a href="http://code.google.com/p/go/downloads/list">http://code.google.com/p/go/downloads/list</a>.</li>
<li>Open the package (possibly with Opt-Open if the package hasn't been signed) and proceed with installation using the defaults.</li>
<li><p>To test the installation, open the go folder in the spikes repo, and run the hello.go sample by issuing</p>

<pre><code>$ go run hello.go
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Sublime Text 2 with Sublime Package Control]]></title>
    <link href="http://paulomouat.github.com/blog/blog/2012/08/20/setting-up-sublime-text-2-with-sublime-package-control/"/>
    <updated>2012-08-20T21:13:00-04:00</updated>
    <id>http://paulomouat.github.com/blog/blog/2012/08/20/setting-up-sublime-text-2-with-sublime-package-control</id>
    <content type="html"><![CDATA[<p>Install Sublime Package Control from <a href="http://wbond.net/sublime_packages/package_control">http://wbond.net/sublime_packages/package_control</a> by doing the following (if you run into any issues, there are additional details at <a href="http://wbond.net/sublime_packages/package_control/installation">http://wbond.net/sublime_packages/package_control/installation</a>):</p>

<ol>
<li><p>Run the following command from the Sublime Text console, invoked through Ctrl+`:</p>

<pre><code>import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print 'Please restart Sublime Text to finish installation'
</code></pre></li>
<li><p>Restart Sublime Text.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up the command for Sublime Text 2]]></title>
    <link href="http://paulomouat.github.com/blog/blog/2012/08/20/setting-up-the-command-for-sublime-text-2/"/>
    <updated>2012-08-20T21:05:00-04:00</updated>
    <id>http://paulomouat.github.com/blog/blog/2012/08/20/setting-up-the-command-for-sublime-text-2</id>
    <content type="html"><![CDATA[<p>To set up the command-line script to invoke Sublime Text 2 do the following:</p>

<ol>
<li><p>In the devsetup repo, grant the <strong>create_subl_symlink.sh</strong> script execution rights:</p>

<pre><code>$ chmod a+x create_subl_symlink.sh
</code></pre></li>
<li><p>Execute the script:</p>

<pre><code>$ ./create_subl_symlink.sh
</code></pre></li>
<li><p>Sublime Text 2 can now be invoked from the command-line by simply executing</p>

<pre><code>$ subl
</code></pre>

<p>or</p>

<pre><code>$ subl &lt;name of file to edit or create&gt;
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up the Windows PowerShell profile in Windows]]></title>
    <link href="http://paulomouat.github.com/blog/blog/2012/08/20/setting-up-the-windows-powershell-profile/"/>
    <updated>2012-08-20T18:51:00-04:00</updated>
    <id>http://paulomouat.github.com/blog/blog/2012/08/20/setting-up-the-windows-powershell-profile</id>
    <content type="html"><![CDATA[<p>Here's how to make the Windows PowerShell command-line prompt use the Visual Studio 2012 environment variables and settings:</p>

<ol>
<li><p>We have to start by allowing the loading of PowerShell configuration and profile files, which is disabled by default. To that end, execute the following in a PowerShell window started with admin rights (confirm you want to change the execution policy when prompted):</p>

<pre><code>PS&gt; Set-ExecutionPolicy Unrestricted
</code></pre></li>
<li><p>Copy the PowerShell profile file from <strong>devsetup/Windows/Microsoft.PowerShell_profile.ps1</strong> into <strong>My Documents/WindowsPowerShell</strong>, ensuring the filename is preserved exactly.</p></li>
<li><p>That's it. You can now use the Visual Studio command-line tools from PowerShell.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Ruby, RVM, Rails and the blog]]></title>
    <link href="http://paulomouat.github.com/blog/blog/2012/08/14/setting-up-ruby/"/>
    <updated>2012-08-14T21:03:00-04:00</updated>
    <id>http://paulomouat.github.com/blog/blog/2012/08/14/setting-up-ruby</id>
    <content type="html"><![CDATA[<p>To install the Ruby-related tools:</p>

<p>Install RVM, Ruby 1.9.3 and Rails 3 by following the directions at <a href="http://pragmaticstudio.com/blog/2010/9/23/install-rails-ruby-mac/">http://pragmaticstudio.com/blog/2010/9/23/install-rails-ruby-mac/</a></p>

<p>Then, to set the blog up, run the following on the command-line:</p>

<pre><code>$ cd blog
$ gem install bundler
$ bundle install
$ rake setup_github_pages
</code></pre>
]]></content>
  </entry>
  
</feed>
